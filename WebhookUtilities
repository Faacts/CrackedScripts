local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/Faacts/UILibraries/main/RayfieldKey'))()
local Window = Rayfield:CreateWindow({
	Name = "Pearl's Webhook Utils",
	LoadingTitle = "Webhook Utils Loading..",
	LoadingSubtitle = "by Facts#3866",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil,
		FileName = "FactsHubStuff"
	},
        Discord = {
        	Enabled = false,
        	Invite = "wP6XfkXmAk",
        	RememberJoins = true
        },
	KeySystem = false,
	KeySettings = {
		Title = "",
		Subtitle = "",
		Note = "",
		FileName = "SiriusKey",
		SaveKey = false,
		GrabKeyFromSite = false,
		Key = ""
	}
})

-- Tabs
local Tab = Window:CreateTab("Home", 4370345144)
local Tab2 = Window:CreateTab("Credits", 3944704135)
-- Sections
local Section = Tab:CreateSection("Info")


local WebhookLink = Tab:CreateParagraph({Title = "Current Webhook:", Content = ""})

local Button = Tab:CreateButton({
	Name = "Copy Webhook URL",
	Callback = function()
		setclipboard(hookurl)
		Rayfield:Notify({
			Title = "URL Copied!",
			Content = "Webhook URL was copied to clipboard!",
			Duration = 5,
			Image = 4483362458,
		})
	end,
})

local Section = Tab:CreateSection("Main")

local WebhookURL = Tab:CreateInput({
	Name = "Webhook URL",
	PlaceholderText = "Enter URL",
	RemoveTextAfterFocusLost = true,
	Callback = function(Text)
		hookurl = Text
		WebhookLink:Set({Title = "Current Webhook:", Content = hookurl})
	end,
})

local Slider = Tab:CreateSlider({
	Name = "Message Delay",
	Range = {0, 10},
	Increment = 1,
	Suffix = "Delay",
	CurrentValue = 0.5,
	Flag = "Slider1",
	Callback = function(Value)
		mdelay = Value
	end,
})


local Message = Tab:CreateInput({
	Name = "Message To Send",
	PlaceholderText = "Enter Message",
	RemoveTextAfterFocusLost = false,
	Callback = function(Text)
		messagetosend = Text
	end,
})

local Button = Tab:CreateButton({
	Name = "Send Message",
	Callback = function()
        if messagetosend == nil or hookurl == nil then
            Rayfield:Notify({
                Title = "Error!",
                Content = "Please enter the correct Settings!",
                Duration = 5,
                Image = 4483362458,
            })
        else
		request = http_request or request or HttpPost or syn.request
		request(
			{
				Url = hookurl,
				Method = 'POST',
				Headers = {
					['Content-Type'] = 'application/json'
				},
				Body = game:GetService('HttpService'):JSONEncode({content = messagetosend})
			}
		);
        end
	end,
})

local Toggle = Tab:CreateToggle({
	Name = "Spam Message",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(Value)
		getgenv().webh = Value
		if Value then
			send()
		end
		if Value then
		Rayfield:Notify({
			Title = "Success!",
			Content = "Spamming Messages!",
			Duration = 5,
			Image = 4483362458,
		})
		end
	end,
})

function send()
	spawn(function()
		while getgenv().webh == true do
			request = http_request or request or HttpPost or syn.request
			request(
				{
					Url = hookurl,
					Method = 'POST',
					Headers = {
						['Content-Type'] = 'application/json'
					},
					Body = game:GetService('HttpService'):JSONEncode({content = messagetosend})
				}
			);
		task.wait(mdelay)
		end
	end)
end

local Section = Tab:CreateSection("Util")

local Button = Tab:CreateButton({
	Name = "Delete Webhook",
	Callback = function()
		request = http_request or request or HttpPost or syn.request
		request({
			Url = hookurl,
			Method = "DELETE"
		})
		Rayfield:Notify({
			Title = "Success!",
			Content = "Deleted Webhook Successfully!",
			Duration = 5,
			Image = 4483362458,
		})
	end,
})

local Button = Tab:CreateButton({
	Name = "Get Webhook Information",
	Callback = function()
		request = http_request or request or HttpPost or syn.request
		local response = request(
			{
				Url = hookurl,
				Method = "GET",
				Headers = {
					["Content-Type"] = "application/json"
				},
			}
		)
		for i,v in pairs(response) do
			print(i,v)
		end
		Rayfield:Notify({
			Title = "Success!",
			Content = "Printed Information in console (F9)",
			Duration = 5,
			Image = 4483362458,
		})
	end,
})

local Section = Tab:CreateSection("Misc")

local Input = Tab:CreateInput({
	Name = "Webhook Name",
	PlaceholderText = "Enter Name",
	RemoveTextAfterFocusLost = false,
	Callback = function(Text)
		hookname = Text
	end,
})

local Button = Tab:CreateButton({
	Name = "Change Webhook Name",
	Callback = function()
		request = http_request or request or HttpPost or syn.request
		request(
			{
				Url = hookurl,
				Method = 'PATCH',
				Headers = {
					['Content-Type'] = 'application/json'
				},
				Body = game:GetService('HttpService'):JSONEncode({name = hookname})
			}
		);
		Rayfield:Notify({
			Title = "Success!",
			Content = "Changed Webhook name to "..hookname.."!",
			Duration = 5,
			Image = 4483362458,
		})
	end,
})

local Section = Tab2:CreateSection("Credits")

-- credits page
local Label = Tab2:CreateLabel("Developed By Facts#3866")
local Button = Tab2:CreateButton({
	Name = "Join Discord Server",
	Callback = function()
		loadstring(game:HttpGet('https://factshub.vercel.app/Discord.lua'))();
	end,
})
